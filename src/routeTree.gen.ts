/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ClerkRouteRouteImport } from './routes/clerk/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignIn2RouteImport } from './routes/(auth)/sign-in-2'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as authOtpRouteImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'
import { Route as ClerkAuthenticatedRouteRouteImport } from './routes/clerk/_authenticated/route'
import { Route as ClerkauthRouteRouteImport } from './routes/clerk/(auth)/route'
import { Route as AuthenticatedAdminRouteRouteImport } from './routes/_authenticated/admin/route'
import { Route as AuthenticatedAdminIndexRouteImport } from './routes/_authenticated/admin/index'
import { Route as ClerkAuthenticatedUserManagementRouteImport } from './routes/clerk/_authenticated/user-management'
import { Route as ClerkauthSignUpRouteImport } from './routes/clerk/(auth)/sign-up'
import { Route as ClerkauthSignInRouteImport } from './routes/clerk/(auth)/sign-in'
import { Route as AuthenticatedAdminSettingsRouteRouteImport } from './routes/_authenticated/admin/settings/route'
import { Route as AuthenticatedAdminUsersIndexRouteImport } from './routes/_authenticated/admin/users/index'
import { Route as AuthenticatedAdminTasksIndexRouteImport } from './routes/_authenticated/admin/tasks/index'
import { Route as AuthenticatedAdminSettingsIndexRouteImport } from './routes/_authenticated/admin/settings/index'
import { Route as AuthenticatedAdminHelpCenterIndexRouteImport } from './routes/_authenticated/admin/help-center/index'
import { Route as AuthenticatedAdminChatsIndexRouteImport } from './routes/_authenticated/admin/chats/index'
import { Route as AuthenticatedAdminAppsIndexRouteImport } from './routes/_authenticated/admin/apps/index'
import { Route as AuthenticatedAdminSettingsNotificationsRouteImport } from './routes/_authenticated/admin/settings/notifications'
import { Route as AuthenticatedAdminSettingsDisplayRouteImport } from './routes/_authenticated/admin/settings/display'
import { Route as AuthenticatedAdminSettingsAppearanceRouteImport } from './routes/_authenticated/admin/settings/appearance'
import { Route as AuthenticatedAdminSettingsAccountRouteImport } from './routes/_authenticated/admin/settings/account'
import { Route as AuthenticatedAdminErrorsErrorRouteImport } from './routes/_authenticated/admin/errors/$error'

const ClerkRouteRoute = ClerkRouteRouteImport.update({
  id: '/clerk',
  path: '/clerk',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignIn2Route = authSignIn2RouteImport.update({
  id: '/(auth)/sign-in-2',
  path: '/sign-in-2',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const authOtpRoute = authOtpRouteImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ClerkAuthenticatedRouteRoute = ClerkAuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => ClerkRouteRoute,
} as any)
const ClerkauthRouteRoute = ClerkauthRouteRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => ClerkRouteRoute,
} as any)
const AuthenticatedAdminRouteRoute = AuthenticatedAdminRouteRouteImport.update({
  id: '/_authenticated/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedAdminIndexRoute = AuthenticatedAdminIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedAdminRouteRoute,
} as any)
const ClerkAuthenticatedUserManagementRoute =
  ClerkAuthenticatedUserManagementRouteImport.update({
    id: '/user-management',
    path: '/user-management',
    getParentRoute: () => ClerkAuthenticatedRouteRoute,
  } as any)
const ClerkauthSignUpRoute = ClerkauthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => ClerkauthRouteRoute,
} as any)
const ClerkauthSignInRoute = ClerkauthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => ClerkauthRouteRoute,
} as any)
const AuthenticatedAdminSettingsRouteRoute =
  AuthenticatedAdminSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminUsersIndexRoute =
  AuthenticatedAdminUsersIndexRouteImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminTasksIndexRoute =
  AuthenticatedAdminTasksIndexRouteImport.update({
    id: '/tasks/',
    path: '/tasks/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminSettingsIndexRoute =
  AuthenticatedAdminSettingsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedAdminSettingsRouteRoute,
  } as any)
const AuthenticatedAdminHelpCenterIndexRoute =
  AuthenticatedAdminHelpCenterIndexRouteImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminChatsIndexRoute =
  AuthenticatedAdminChatsIndexRouteImport.update({
    id: '/chats/',
    path: '/chats/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminAppsIndexRoute =
  AuthenticatedAdminAppsIndexRouteImport.update({
    id: '/apps/',
    path: '/apps/',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)
const AuthenticatedAdminSettingsNotificationsRoute =
  AuthenticatedAdminSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedAdminSettingsRouteRoute,
  } as any)
const AuthenticatedAdminSettingsDisplayRoute =
  AuthenticatedAdminSettingsDisplayRouteImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedAdminSettingsRouteRoute,
  } as any)
const AuthenticatedAdminSettingsAppearanceRoute =
  AuthenticatedAdminSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedAdminSettingsRouteRoute,
  } as any)
const AuthenticatedAdminSettingsAccountRoute =
  AuthenticatedAdminSettingsAccountRouteImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedAdminSettingsRouteRoute,
  } as any)
const AuthenticatedAdminErrorsErrorRoute =
  AuthenticatedAdminErrorsErrorRouteImport.update({
    id: '/errors/$error',
    path: '/errors/$error',
    getParentRoute: () => AuthenticatedAdminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/clerk': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/clerk/': typeof ClerkauthRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/admin/settings': typeof AuthenticatedAdminSettingsRouteRouteWithChildren
  '/clerk/sign-in': typeof ClerkauthSignInRoute
  '/clerk/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/admin/': typeof AuthenticatedAdminIndexRoute
  '/admin/errors/$error': typeof AuthenticatedAdminErrorsErrorRoute
  '/admin/settings/account': typeof AuthenticatedAdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AuthenticatedAdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AuthenticatedAdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AuthenticatedAdminSettingsNotificationsRoute
  '/admin/apps': typeof AuthenticatedAdminAppsIndexRoute
  '/admin/chats': typeof AuthenticatedAdminChatsIndexRoute
  '/admin/help-center': typeof AuthenticatedAdminHelpCenterIndexRoute
  '/admin/settings/': typeof AuthenticatedAdminSettingsIndexRoute
  '/admin/tasks': typeof AuthenticatedAdminTasksIndexRoute
  '/admin/users': typeof AuthenticatedAdminUsersIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/clerk': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/sign-in-2': typeof authSignIn2Route
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/clerk/sign-in': typeof ClerkauthSignInRoute
  '/clerk/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/admin': typeof AuthenticatedAdminIndexRoute
  '/admin/errors/$error': typeof AuthenticatedAdminErrorsErrorRoute
  '/admin/settings/account': typeof AuthenticatedAdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AuthenticatedAdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AuthenticatedAdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AuthenticatedAdminSettingsNotificationsRoute
  '/admin/apps': typeof AuthenticatedAdminAppsIndexRoute
  '/admin/chats': typeof AuthenticatedAdminChatsIndexRoute
  '/admin/help-center': typeof AuthenticatedAdminHelpCenterIndexRoute
  '/admin/settings': typeof AuthenticatedAdminSettingsIndexRoute
  '/admin/tasks': typeof AuthenticatedAdminTasksIndexRoute
  '/admin/users': typeof AuthenticatedAdminUsersIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/clerk': typeof ClerkRouteRouteWithChildren
  '/_authenticated/admin': typeof AuthenticatedAdminRouteRouteWithChildren
  '/clerk/(auth)': typeof ClerkauthRouteRouteWithChildren
  '/clerk/_authenticated': typeof ClerkAuthenticatedRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-in-2': typeof authSignIn2Route
  '/(auth)/sign-up': typeof authSignUpRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/admin/settings': typeof AuthenticatedAdminSettingsRouteRouteWithChildren
  '/clerk/(auth)/sign-in': typeof ClerkauthSignInRoute
  '/clerk/(auth)/sign-up': typeof ClerkauthSignUpRoute
  '/clerk/_authenticated/user-management': typeof ClerkAuthenticatedUserManagementRoute
  '/_authenticated/admin/': typeof AuthenticatedAdminIndexRoute
  '/_authenticated/admin/errors/$error': typeof AuthenticatedAdminErrorsErrorRoute
  '/_authenticated/admin/settings/account': typeof AuthenticatedAdminSettingsAccountRoute
  '/_authenticated/admin/settings/appearance': typeof AuthenticatedAdminSettingsAppearanceRoute
  '/_authenticated/admin/settings/display': typeof AuthenticatedAdminSettingsDisplayRoute
  '/_authenticated/admin/settings/notifications': typeof AuthenticatedAdminSettingsNotificationsRoute
  '/_authenticated/admin/apps/': typeof AuthenticatedAdminAppsIndexRoute
  '/_authenticated/admin/chats/': typeof AuthenticatedAdminChatsIndexRoute
  '/_authenticated/admin/help-center/': typeof AuthenticatedAdminHelpCenterIndexRoute
  '/_authenticated/admin/settings/': typeof AuthenticatedAdminSettingsIndexRoute
  '/_authenticated/admin/tasks/': typeof AuthenticatedAdminTasksIndexRoute
  '/_authenticated/admin/users/': typeof AuthenticatedAdminUsersIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/clerk'
    | '/admin'
    | '/clerk/'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/admin/settings'
    | '/clerk/sign-in'
    | '/clerk/sign-up'
    | '/clerk/user-management'
    | '/admin/'
    | '/admin/errors/$error'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/admin/apps'
    | '/admin/chats'
    | '/admin/help-center'
    | '/admin/settings/'
    | '/admin/tasks'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/clerk'
    | '/forgot-password'
    | '/otp'
    | '/sign-in'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/clerk/sign-in'
    | '/clerk/sign-up'
    | '/clerk/user-management'
    | '/admin'
    | '/admin/errors/$error'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/admin/apps'
    | '/admin/chats'
    | '/admin/help-center'
    | '/admin/settings'
    | '/admin/tasks'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/clerk'
    | '/_authenticated/admin'
    | '/clerk/(auth)'
    | '/clerk/_authenticated'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/admin/settings'
    | '/clerk/(auth)/sign-in'
    | '/clerk/(auth)/sign-up'
    | '/clerk/_authenticated/user-management'
    | '/_authenticated/admin/'
    | '/_authenticated/admin/errors/$error'
    | '/_authenticated/admin/settings/account'
    | '/_authenticated/admin/settings/appearance'
    | '/_authenticated/admin/settings/display'
    | '/_authenticated/admin/settings/notifications'
    | '/_authenticated/admin/apps/'
    | '/_authenticated/admin/chats/'
    | '/_authenticated/admin/help-center/'
    | '/_authenticated/admin/settings/'
    | '/_authenticated/admin/tasks/'
    | '/_authenticated/admin/users/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ClerkRouteRoute: typeof ClerkRouteRouteWithChildren
  AuthenticatedAdminRouteRoute: typeof AuthenticatedAdminRouteRouteWithChildren
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authSignIn2Route: typeof authSignIn2Route
  authSignUpRoute: typeof authSignUpRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/clerk': {
      id: '/clerk'
      path: '/clerk'
      fullPath: '/clerk'
      preLoaderRoute: typeof ClerkRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clerk/_authenticated': {
      id: '/clerk/_authenticated'
      path: ''
      fullPath: '/clerk'
      preLoaderRoute: typeof ClerkAuthenticatedRouteRouteImport
      parentRoute: typeof ClerkRouteRoute
    }
    '/clerk/(auth)': {
      id: '/clerk/(auth)'
      path: '/'
      fullPath: '/clerk/'
      preLoaderRoute: typeof ClerkauthRouteRouteImport
      parentRoute: typeof ClerkRouteRoute
    }
    '/_authenticated/admin': {
      id: '/_authenticated/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthenticatedAdminRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/admin/': {
      id: '/_authenticated/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AuthenticatedAdminIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/clerk/_authenticated/user-management': {
      id: '/clerk/_authenticated/user-management'
      path: '/user-management'
      fullPath: '/clerk/user-management'
      preLoaderRoute: typeof ClerkAuthenticatedUserManagementRouteImport
      parentRoute: typeof ClerkAuthenticatedRouteRoute
    }
    '/clerk/(auth)/sign-up': {
      id: '/clerk/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/clerk/sign-up'
      preLoaderRoute: typeof ClerkauthSignUpRouteImport
      parentRoute: typeof ClerkauthRouteRoute
    }
    '/clerk/(auth)/sign-in': {
      id: '/clerk/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/clerk/sign-in'
      preLoaderRoute: typeof ClerkauthSignInRouteImport
      parentRoute: typeof ClerkauthRouteRoute
    }
    '/_authenticated/admin/settings': {
      id: '/_authenticated/admin/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AuthenticatedAdminSettingsRouteRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/users/': {
      id: '/_authenticated/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AuthenticatedAdminUsersIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/tasks/': {
      id: '/_authenticated/admin/tasks/'
      path: '/tasks'
      fullPath: '/admin/tasks'
      preLoaderRoute: typeof AuthenticatedAdminTasksIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/settings/': {
      id: '/_authenticated/admin/settings/'
      path: '/'
      fullPath: '/admin/settings/'
      preLoaderRoute: typeof AuthenticatedAdminSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedAdminSettingsRouteRoute
    }
    '/_authenticated/admin/help-center/': {
      id: '/_authenticated/admin/help-center/'
      path: '/help-center'
      fullPath: '/admin/help-center'
      preLoaderRoute: typeof AuthenticatedAdminHelpCenterIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/chats/': {
      id: '/_authenticated/admin/chats/'
      path: '/chats'
      fullPath: '/admin/chats'
      preLoaderRoute: typeof AuthenticatedAdminChatsIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/apps/': {
      id: '/_authenticated/admin/apps/'
      path: '/apps'
      fullPath: '/admin/apps'
      preLoaderRoute: typeof AuthenticatedAdminAppsIndexRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
    '/_authenticated/admin/settings/notifications': {
      id: '/_authenticated/admin/settings/notifications'
      path: '/notifications'
      fullPath: '/admin/settings/notifications'
      preLoaderRoute: typeof AuthenticatedAdminSettingsNotificationsRouteImport
      parentRoute: typeof AuthenticatedAdminSettingsRouteRoute
    }
    '/_authenticated/admin/settings/display': {
      id: '/_authenticated/admin/settings/display'
      path: '/display'
      fullPath: '/admin/settings/display'
      preLoaderRoute: typeof AuthenticatedAdminSettingsDisplayRouteImport
      parentRoute: typeof AuthenticatedAdminSettingsRouteRoute
    }
    '/_authenticated/admin/settings/appearance': {
      id: '/_authenticated/admin/settings/appearance'
      path: '/appearance'
      fullPath: '/admin/settings/appearance'
      preLoaderRoute: typeof AuthenticatedAdminSettingsAppearanceRouteImport
      parentRoute: typeof AuthenticatedAdminSettingsRouteRoute
    }
    '/_authenticated/admin/settings/account': {
      id: '/_authenticated/admin/settings/account'
      path: '/account'
      fullPath: '/admin/settings/account'
      preLoaderRoute: typeof AuthenticatedAdminSettingsAccountRouteImport
      parentRoute: typeof AuthenticatedAdminSettingsRouteRoute
    }
    '/_authenticated/admin/errors/$error': {
      id: '/_authenticated/admin/errors/$error'
      path: '/errors/$error'
      fullPath: '/admin/errors/$error'
      preLoaderRoute: typeof AuthenticatedAdminErrorsErrorRouteImport
      parentRoute: typeof AuthenticatedAdminRouteRoute
    }
  }
}

interface ClerkauthRouteRouteChildren {
  ClerkauthSignInRoute: typeof ClerkauthSignInRoute
  ClerkauthSignUpRoute: typeof ClerkauthSignUpRoute
}

const ClerkauthRouteRouteChildren: ClerkauthRouteRouteChildren = {
  ClerkauthSignInRoute: ClerkauthSignInRoute,
  ClerkauthSignUpRoute: ClerkauthSignUpRoute,
}

const ClerkauthRouteRouteWithChildren = ClerkauthRouteRoute._addFileChildren(
  ClerkauthRouteRouteChildren,
)

interface ClerkAuthenticatedRouteRouteChildren {
  ClerkAuthenticatedUserManagementRoute: typeof ClerkAuthenticatedUserManagementRoute
}

const ClerkAuthenticatedRouteRouteChildren: ClerkAuthenticatedRouteRouteChildren =
  {
    ClerkAuthenticatedUserManagementRoute:
      ClerkAuthenticatedUserManagementRoute,
  }

const ClerkAuthenticatedRouteRouteWithChildren =
  ClerkAuthenticatedRouteRoute._addFileChildren(
    ClerkAuthenticatedRouteRouteChildren,
  )

interface ClerkRouteRouteChildren {
  ClerkauthRouteRoute: typeof ClerkauthRouteRouteWithChildren
  ClerkAuthenticatedRouteRoute: typeof ClerkAuthenticatedRouteRouteWithChildren
}

const ClerkRouteRouteChildren: ClerkRouteRouteChildren = {
  ClerkauthRouteRoute: ClerkauthRouteRouteWithChildren,
  ClerkAuthenticatedRouteRoute: ClerkAuthenticatedRouteRouteWithChildren,
}

const ClerkRouteRouteWithChildren = ClerkRouteRoute._addFileChildren(
  ClerkRouteRouteChildren,
)

interface AuthenticatedAdminSettingsRouteRouteChildren {
  AuthenticatedAdminSettingsAccountRoute: typeof AuthenticatedAdminSettingsAccountRoute
  AuthenticatedAdminSettingsAppearanceRoute: typeof AuthenticatedAdminSettingsAppearanceRoute
  AuthenticatedAdminSettingsDisplayRoute: typeof AuthenticatedAdminSettingsDisplayRoute
  AuthenticatedAdminSettingsNotificationsRoute: typeof AuthenticatedAdminSettingsNotificationsRoute
  AuthenticatedAdminSettingsIndexRoute: typeof AuthenticatedAdminSettingsIndexRoute
}

const AuthenticatedAdminSettingsRouteRouteChildren: AuthenticatedAdminSettingsRouteRouteChildren =
  {
    AuthenticatedAdminSettingsAccountRoute:
      AuthenticatedAdminSettingsAccountRoute,
    AuthenticatedAdminSettingsAppearanceRoute:
      AuthenticatedAdminSettingsAppearanceRoute,
    AuthenticatedAdminSettingsDisplayRoute:
      AuthenticatedAdminSettingsDisplayRoute,
    AuthenticatedAdminSettingsNotificationsRoute:
      AuthenticatedAdminSettingsNotificationsRoute,
    AuthenticatedAdminSettingsIndexRoute: AuthenticatedAdminSettingsIndexRoute,
  }

const AuthenticatedAdminSettingsRouteRouteWithChildren =
  AuthenticatedAdminSettingsRouteRoute._addFileChildren(
    AuthenticatedAdminSettingsRouteRouteChildren,
  )

interface AuthenticatedAdminRouteRouteChildren {
  AuthenticatedAdminSettingsRouteRoute: typeof AuthenticatedAdminSettingsRouteRouteWithChildren
  AuthenticatedAdminIndexRoute: typeof AuthenticatedAdminIndexRoute
  AuthenticatedAdminErrorsErrorRoute: typeof AuthenticatedAdminErrorsErrorRoute
  AuthenticatedAdminAppsIndexRoute: typeof AuthenticatedAdminAppsIndexRoute
  AuthenticatedAdminChatsIndexRoute: typeof AuthenticatedAdminChatsIndexRoute
  AuthenticatedAdminHelpCenterIndexRoute: typeof AuthenticatedAdminHelpCenterIndexRoute
  AuthenticatedAdminTasksIndexRoute: typeof AuthenticatedAdminTasksIndexRoute
  AuthenticatedAdminUsersIndexRoute: typeof AuthenticatedAdminUsersIndexRoute
}

const AuthenticatedAdminRouteRouteChildren: AuthenticatedAdminRouteRouteChildren =
  {
    AuthenticatedAdminSettingsRouteRoute:
      AuthenticatedAdminSettingsRouteRouteWithChildren,
    AuthenticatedAdminIndexRoute: AuthenticatedAdminIndexRoute,
    AuthenticatedAdminErrorsErrorRoute: AuthenticatedAdminErrorsErrorRoute,
    AuthenticatedAdminAppsIndexRoute: AuthenticatedAdminAppsIndexRoute,
    AuthenticatedAdminChatsIndexRoute: AuthenticatedAdminChatsIndexRoute,
    AuthenticatedAdminHelpCenterIndexRoute:
      AuthenticatedAdminHelpCenterIndexRoute,
    AuthenticatedAdminTasksIndexRoute: AuthenticatedAdminTasksIndexRoute,
    AuthenticatedAdminUsersIndexRoute: AuthenticatedAdminUsersIndexRoute,
  }

const AuthenticatedAdminRouteRouteWithChildren =
  AuthenticatedAdminRouteRoute._addFileChildren(
    AuthenticatedAdminRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ClerkRouteRoute: ClerkRouteRouteWithChildren,
  AuthenticatedAdminRouteRoute: AuthenticatedAdminRouteRouteWithChildren,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authSignIn2Route: authSignIn2Route,
  authSignUpRoute: authSignUpRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
